# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rra9fLnU-RTDJgPgQE91g1CjiTAkxYVL
"""

from google.colab import files # 구글 코랩에서 파일 이용하기 위해 files 라이브러리 임포트

#f = files.upload() # 구글 코랩에서는 로컬 파일을 읽어들일 수 없는것 같다 업로드가 선행된다

f = open('유튜브 명곡 모음집 PlayList by 재욱.txt', 'r', encoding='UTF-8') # 파일 열기

music_list = [] # 파일 내용을 line by line으로 담을 리스트

# 파일을 한 줄씩 저장하는데 읽는 도중 빈칸(줄바꿈)이 있으면 생략
for line in f:
  if line != '\n':
    music_list.append(line)
  else:
    continue

print(len(music_list)) # 총 몇줄?
print(type(music_list[0])) # 구성한 리스트 요소 타입 알아보기

i = 0
for line in music_list:
  music_list[i] = music_list[i].replace('\n', '') # 내용 뒤에 줄바꿈(\n)이 있으면 삭제해줌
  i += 1
  if i >= len(music_list):
    break
print()
print(music_list) # 어떻게 생겨먹었는지 모양 보기

# 인쇄해서 모양을 보니깐 중간에 ,가 들어있고 그 바로 뒤에 ' '(공백)이 하나씩 포함되어 있네, 내용을 조금 조작해보자
i = 0
for line in music_list:
  music_list[i] = music_list[i].split(',') # , 제거(이 과정에서 String->List 변환 일어남, 파이썬은 이게 자동으로 되네;)
  music_list[i][1] = music_list[i][1].strip() # 이제 2차원 리스트 조작, 위에서 ,를 기준으로 잘랐으니
  i += 1                                      # 1번 인덱스 요소에 ' '(공백)이 포함된채로 저장되어있음 공백을 제거해주자
  if i >= len(music_list):
    break
print()
print(music_list)

import csv # csv로 저장하기 위해 csv 라이브러리 임포트

f = open('music_list_csv_test.csv', 'w', newline='') # 내용을 저장할 파일 지정

f_writer = csv.writer(f) # 파일에 쓰기 준비

for line in music_list: # 리스트 요소 한개당 한줄씩 입력하렴
  f_writer.writerow(line)

f.close() # 마지막으로 파일 다 썼으면 닫아주기!

from google.colab import files
#files.upload()

f = open('연도별(월단위)나라별방한외국인숫자.csv', 'r', encoding='cp949')

import csv
csv_reader = csv.reader(f)
visitor_total_list_final = []

for line in csv_reader:
  visitor_total_list_final.append(line)
#list_len_before = len(visitor_total_list_final)
print('# 정제 작업 이전 데이터 크기: ' + str(len(visitor_total_list_final)))

print(type(visitor_total_list_final[0][2]))
bad_data = ['연도', '연도대륙', '기타', '교포', ''] # 데이터를 살펴보면 나라 이름이 아니라 이상한 불량 데이터가 들어있는 행이 있다. 그 불량 데이터들의 리스트, 마지막 줄 총계 데이터(나라 이름 데이터가 '')까지 배제
visitor_total_list_final_new = [] # 진짜 최종 리스트 (기존 리스트 ---(필터)--> 뉴 리스트)방식 이용할거임

#list_len = len(visitor_total_list_final)
#i = 0
'''
기존 리스트에서 삭제해가는 방식(파악하지 못한 결함 발생, 460줄가량 까지는 필터가 적용되는데 이 후에는 적용 안되는 현상이 있었음)
for item in visitor_total_list_final:
  print(i)
  if i >= list_len:
    break
  if visitor_total_list_final[i][2] in bad_data:
    visitor_total_list_final.pop(i) # 혹은 del visitor_total_list_final[i]로 쓸수도 있다
    print('pop직후 visitor_total_list_final의 크기: ' + str(len(visitor_total_list_final)))
    list_len -= 1
    print('#list_len#: ' + str(list_len))
  else:
    i += 1
'''
# 기존 리스트에서 불량 데이터를 제외시키고 필요한 데이터만 뽑아서 새로운 리스트로 구성하는 방식
i = 0
for item in visitor_total_list_final:
  if i >= len(visitor_total_list_final):
    break
  if visitor_total_list_final[i][2] not in bad_data:
    del visitor_total_list_final[i][5:7]  # 나라별 방한 외국인 수 통계 숫자 데이터가 들어있는 칼럼 뒤의 불필요한 데이터는 삭제(리스트 구성 이전 적용 ver.)
    visitor_total_list_final_new.append(visitor_total_list_final[i]) # 불필요한 데이터를 삭제한 행 데이터를 새로운 리스트에 저장
  i += 1
print('★ 최종 데이터 크기: ' + str(len(visitor_total_list_final_new)))
'''
나라별 방한 외국인 수 통계 숫자 데이터가 들어있는 칼럼 뒤의 불필요한 데이터는 삭제(리스트 구성 이후 적용 ver.)
i = 0
for item in visitor_total_list_final_new:
  if i >= len(visitor_total_list_final_new):
    break
  del visitor_total_list_final_new[i][5:7]
  i += 1
'''
for item in visitor_total_list_final_new:
  print(item)
'''
기존 리스트에서 삭제해가는 방식(파악하지 못한 결함 발생, 460줄가량 까지는 필터가 적용되는데 이 후에는 적용 안되는 현상이 있었음)
print('실행결과: [{0}]개의 bad data가 리스트에서 삭제되었습니다.'.format(list_len_before - list_len))
print('@ 정제 작업 이후 데이터 크기: ' + str(len(visitor_total_list_final)))
#for item in visitor_total_list_final:
  #print(item)
'''

f = open('연도별+나라별방한외국인통계final_final.csv', 'w', newline='')
f_writer = csv.writer(f)

for item in visitor_total_list_final_new:
  f_writer.writerow(item)

f.close() # 진짜 이거 까먹지 말자.. 이거 없으면 원하는 결과에서 항상 뭔가 이상하게 틀어진다!!